//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34014
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wcf인증_테스트클라이언트.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISQLWebService", CallbackContract=typeof(wcf인증_테스트클라이언트.ServiceReference1.ISQLWebServiceCallback))]
    public interface ISQLWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISQLWebService/GetData", ReplyAction="http://tempuri.org/ISQLWebService/GetDataResponse")]
        string GetData(string AuthKey, string query, string serviceURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISQLWebService/GetSQLPlan", ReplyAction="http://tempuri.org/ISQLWebService/GetSQLPlanResponse")]
        string GetSQLPlan(string query, string serviceURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISQLWebService/GetTime", ReplyAction="http://tempuri.org/ISQLWebService/GetTimeResponse")]
        System.DateTime GetTime();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISQLWebService/RegistQuery")]
        void RegistQuery(string AuthKey, string query, string serviceURL);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISQLWebService/RegistQueryBlock")]
        void RegistQueryBlock(string AuthKey, string[] QueryBlock, string serviceURL);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISQLWebServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISQLWebService/OnJobEnd")]
        void OnJobEnd(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISQLWebServiceChannel : wcf인증_테스트클라이언트.ServiceReference1.ISQLWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SQLWebServiceClient : System.ServiceModel.DuplexClientBase<wcf인증_테스트클라이언트.ServiceReference1.ISQLWebService>, wcf인증_테스트클라이언트.ServiceReference1.ISQLWebService {
        
        public SQLWebServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SQLWebServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SQLWebServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SQLWebServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SQLWebServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string GetData(string AuthKey, string query, string serviceURL) {
            return base.Channel.GetData(AuthKey, query, serviceURL);
        }
        
        public string GetSQLPlan(string query, string serviceURL) {
            return base.Channel.GetSQLPlan(query, serviceURL);
        }
        
        public System.DateTime GetTime() {
            return base.Channel.GetTime();
        }
        
        public void RegistQuery(string AuthKey, string query, string serviceURL) {
            base.Channel.RegistQuery(AuthKey, query, serviceURL);
        }
        
        public void RegistQueryBlock(string AuthKey, string[] QueryBlock, string serviceURL) {
            base.Channel.RegistQueryBlock(AuthKey, QueryBlock, serviceURL);
        }
    }
}
