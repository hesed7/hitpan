//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34014
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQLiteManager.WebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SQLiteManager.WebService.SQLWebService")]
    public interface SQLWebService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/RegistQuery", ReplyAction="http://tempuri.org/SQLWebService/RegistQueryResponse")]
        int RegistQuery(string AuthKey, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/RegistQuery", ReplyAction="http://tempuri.org/SQLWebService/RegistQueryResponse")]
        System.Threading.Tasks.Task<int> RegistQueryAsync(string AuthKey, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/RegistQueryBlock", ReplyAction="http://tempuri.org/SQLWebService/RegistQueryBlockResponse")]
        void RegistQueryBlock(string AuthKey, string[] QueryBlock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/RegistQueryBlock", ReplyAction="http://tempuri.org/SQLWebService/RegistQueryBlockResponse")]
        System.Threading.Tasks.Task RegistQueryBlockAsync(string AuthKey, string[] QueryBlock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/GetData", ReplyAction="http://tempuri.org/SQLWebService/GetDataResponse")]
        string GetData(string AuthKey, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/GetData", ReplyAction="http://tempuri.org/SQLWebService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(string AuthKey, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/GetSQLPlan", ReplyAction="http://tempuri.org/SQLWebService/GetSQLPlanResponse")]
        string GetSQLPlan(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/GetSQLPlan", ReplyAction="http://tempuri.org/SQLWebService/GetSQLPlanResponse")]
        System.Threading.Tasks.Task<string> GetSQLPlanAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/GetTime", ReplyAction="http://tempuri.org/SQLWebService/GetTimeResponse")]
        System.DateTime GetTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SQLWebService/GetTime", ReplyAction="http://tempuri.org/SQLWebService/GetTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetTimeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SQLWebServiceChannel : SQLiteManager.WebService.SQLWebService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SQLWebServiceClient : System.ServiceModel.ClientBase<SQLiteManager.WebService.SQLWebService>, SQLiteManager.WebService.SQLWebService
    {
        
        public SQLWebServiceClient()
        {
        }
        
        public SQLWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public SQLWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public SQLWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public SQLWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public int RegistQuery(string AuthKey, string query)
        {
            return base.Channel.RegistQuery(AuthKey, query);
        }
        
        public System.Threading.Tasks.Task<int> RegistQueryAsync(string AuthKey, string query)
        {
            return base.Channel.RegistQueryAsync(AuthKey, query);
        }
        
        public void RegistQueryBlock(string AuthKey, string[] QueryBlock)
        {
            base.Channel.RegistQueryBlock(AuthKey, QueryBlock);
        }
        
        public System.Threading.Tasks.Task RegistQueryBlockAsync(string AuthKey, string[] QueryBlock)
        {
            return base.Channel.RegistQueryBlockAsync(AuthKey, QueryBlock);
        }
        
        public string GetData(string AuthKey, string query)
        {
            return base.Channel.GetData(AuthKey, query);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(string AuthKey, string query)
        {
            return base.Channel.GetDataAsync(AuthKey, query);
        }
        
        public string GetSQLPlan(string query)
        {
            return base.Channel.GetSQLPlan(query);
        }
        
        public System.Threading.Tasks.Task<string> GetSQLPlanAsync(string query)
        {
            return base.Channel.GetSQLPlanAsync(query);
        }
        
        public System.DateTime GetTime()
        {
            return base.Channel.GetTime();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetTimeAsync()
        {
            return base.Channel.GetTimeAsync();
        }
    }
}
